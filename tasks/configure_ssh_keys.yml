---
- name: Get ssh keys for jenkins slave
  block:
  - name: "Create a directory .ssh if it doesn't exist"
    file:
      path: "{{ jenkins2_home_directory }}/.ssh"
      state: directory
      mode: 0700

  - name: "Ensure that openssh *private* key doesn't exist"
    stat:
      path: "{{ jenkins2_home_directory }}/.ssh/\
      {{ jenkins2_ssh_keys_private_keyname }}"
    register: private_key_stat

  - name: "Ensure that openssh *public* key doesn't exist"
    stat:
      path: "{{ jenkins2_home_directory }}/.ssh/\
      {{ jenkins2_ssh_keys_private_keyname }}.pub"
    register: public_key_stat

  - name: "Generate a pair of keys"
    command: >-
      {{ 'ssh-keygen
      -q
      -b ' + jenkins2_ssh_keys_size|string + '
      -t rsa
      -f ' + jenkins2_home_directory + '/.ssh/' +
             jenkins2_ssh_keys_private_keyname +
      ' -C "Jenkins"
      -N ""' }}
    changed_when: False
    when: not private_key_stat.stat.exists|bool

  - name: "Set corect folders owners/permissions"
    file:
      path: "{{ item.dst }}"
      owner: "{{ jenkins2_user | default('jenkins') }}"
      group: "{{ jenkins2_user | default('jenkins') }}"
      mode: "{{ item.mode }}"
    with_items:
      - {dst: "{{ jenkins2_home_directory }}/.ssh", mode: "0700"}
      - {dst: "{{ jenkins2_home_directory }}/.ssh/\
          {{ jenkins2_ssh_keys_private_keyname }}", mode: "0600"}
      - {dst: "{{ jenkins2_home_directory }}/.ssh/\
          {{ jenkins2_ssh_keys_private_keyname }}.pub", mode: "0600"}

  - name: "Slurp the private key"
    slurp:
      src: "{{ jenkins2_home_directory }}/.ssh/\
      {{ jenkins2_ssh_keys_private_keyname }}"
    register: jenkins_key

  - name: "Save the private key"
    set_fact:
      jenkins_master_key: "{{ jenkins_key['content'] | b64decode }}"

  - name: "Fetch pub key to ansible host"
    fetch:
      src: "{{ jenkins2_home_directory }}/.ssh/\
      {{ jenkins2_ssh_keys_private_keyname }}.pub"
      dest: "{{ jenkins2_ssh_slave_key_fetch }}"
      flat: yes
  become: True
